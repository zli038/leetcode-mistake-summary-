class Solution {
    public String minWindow(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        for (char c : t.toCharArray()) map.put(c, map.getOrDefault(c, 0) + 1);     // String 不是iterable， 要转成char[]  !!!
        
        int toMatch = map.size(); 
        
        int start = 0; 
        int min = Integer.MAX_VALUE; 
        
        for (int i = 0, j = 0; j < s.length(); j++) {
            char c = s.charAt(j);
            Integer count = map.get(c); 
            if (count == null) {
                continue;             //如果快指针是无效char 就一定要continue，不然会继续处理慢指针上的字符，进入while 循环，慢指针++，会越界！！！
            }
       
            count--; 
            map.put(c, count); 
            if (count == 0) {
                toMatch--; 
            }
        
            
            c = s.charAt(i); 
            count = map.get(c); 
            while (count == null || count < 0) {
                if (count != null) {
                    map.put(c, count + 1); 
                }
                i++; 
                c = s.charAt(i); 
                count = map.get(c); 
            }
            
            
            
            if (toMatch == 0 && j - i + 1 < min) {
                start = i; 
                min = j - i + 1; 
            }
        }
        return min == Integer.MAX_VALUE ? "" : s.substring(start, start + min); 
    }
}
